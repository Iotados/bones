#
# MIT License
#
# Copyright (c) 2024 William278
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

spring:
  application:
    name: william278-backend

  # Stop the serving of static resources
  web:
    resources:
      add-mappings: false

  # Configure the database
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver


  # Configure Discord OAuth2
  security:
    oauth2:
      client:
        registration:
          discord:
            provider: discord
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            client-authentication-method: 'client_secret_post'
            authorization-grant-type: 'authorization_code'
            scope:
              - identify
              - email
              - guilds.members.read
            redirect-uri: '${API_BASE_URL}/login/oauth2/code/discord'
            clientName: 'William278.net backend'
        provider:
          discord:
            authorization-uri: https://discord.com/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username

# App config
app:
  api-base-url: ${API_BASE_URL}
  api-title: ${API_TITLE}
  storage-path: ${STORAGE_PATH}
  docs-path: ${DOCS_PATH}
  api-version: ${API_VERSION}
  frontend-base-url: ${FRONTEND_BASE_URL}
  api-secret: ${API_SECRET}
  default-admin-discord-id: ${DEFAULT_ADMIN_DISCORD_ID}
  modrinth-api-token: ${MODRINTH_API_KEY}
  github-api-token: ${GITHUB_API_KEY}
  discord-guild-id: ${DISCORD_GUILD_ID}
  cookie-domain: ${COOKIE_DOMAIN}
  github-webhook-secret: ${GITHUB_WEBHOOK_SECRET}

# Provide OpenAPI docs
springdoc:
  show-actuator: false
  api-docs:
    path: "/openapi"
  swagger-ui:
    disable-swagger-default-url: true
    show-common-extensions: true
    operations-sorter: "alpha"
    path: "/docs/"

# Hides the Whitelabel error page
server:
  error:
    whitelabel:
      enabled: false
  port: ${PORT}
  servlet:
    session:
      cookie:
        domain: ${COOKIE_DOMAIN}

# Debug
logging:
  level:
    org:
      springframework:
        security: DEBUG